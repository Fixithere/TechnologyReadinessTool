<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cxf="http://cxf.apache.org/core" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd">

	<import resource="classpath:META-INF/cxf/cxf.xml" />

	<context:component-scan base-package="net.techreadiness" />
	<context:annotation-config />
	<aop:aspectj-autoproxy />
	
	<aop:config expose-proxy="true"/>

	<!-- Enable message logging using the CXF logging feature -->
	<cxf:bus>
      <cxf:features>
        <cxf:logging/>
      </cxf:features>
    </cxf:bus>

	<bean id="serviceContext" class="net.techreadiness.service.ServiceContext" scope="thread">
		<aop:scoped-proxy/>
	</bean>
	
	<bean id="dataModificationStatus" class="net.techreadiness.service.DataModificationStatus" scope="thread">
		<aop:scoped-proxy/>
	</bean>
	
	<bean id="messageSource" class="net.techreadiness.text.CoreResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>core-batch</value>
				<value>customer</value>
				<value>exceptions</value>
			</list>
		</property>
	</bean>

	<!-- This is how to express a webservice. Spring is loading up the beans
		via autowire (e.g. named helloServiceImpl), so we just reference that bean. CXF 
		servlet is configured on /services, so all of this combines to make our service 
		WSDL exist at: http://localhost:8080/core/services/HelloService?wsdl -->

	<jaxws:endpoint id="userService" implementor="#userServiceImpl" address="/UserService" />

</beans>
