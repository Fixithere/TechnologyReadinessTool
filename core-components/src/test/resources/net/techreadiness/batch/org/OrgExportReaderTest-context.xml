<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="net.techreadiness"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="org.hibernate.dialect.H2Dialect" />
			</bean>
		</property>

		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.cache.use_query_cache" value="false" />
				<entry key="hibernate.cache.use_second_level_cache" value="false" />
				<entry key="hibernate.generate_statistics" value="false" />
				<entry key="hibernate.hbm2ddl.auto" value="create-drop" />
			</map>
		</property>
	</bean>

	<bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:org_export_test" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="isolationLevelForCreate" value="ISOLATION_DEFAULT"/>
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>

	<bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean id="orgExportReader" class="org.springframework.batch.item.database.JpaPagingItemReader" scope="prototype" >
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="queryString" value="select o from OrgDO o join fetch o.orgType left join fetch o.parentOrg left join fetch o.contacts c left join fetch c.contactType" />
		<property name="pageSize" value="100" />
	</bean>
	
	<bean id="orgFieldExtractor" class="net.techreadiness.batch.CoreFieldExtractor" scope="prototype">
		<property name="resource" value="classpath:net/techreadiness/batch/org/org-export-mapping.txt" />
	</bean>
	
	<bean id="orgLineAggregator" class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
		<property name="fieldExtractor" ref="orgFieldExtractor" />
	</bean>
	
	<bean id="orgFlatFileItemWriter" scope="step" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="lineAggregator" ref="orgLineAggregator" />
		<property name="resource" value="#{jobParameters['file.name']}" />
	</bean>
	
	<bean id="orgExtractProcessor" class="net.techreadiness.batch.org.OrgDOToDataProcessor" />
	
	<bean id="mappingServiceImpl" class="net.techreadiness.service.object.mapping.MappingServiceImpl" />
	<bean id="genericDaoImpl" class="net.techreadiness.persistence.dao.GenericDAOImpl" />
	
	<batch:job id="orgCsvExport">
		<batch:step id="orgCsvExportStep">
			<batch:tasklet>
				<batch:chunk reader="orgExportReader" processor="orgExtractProcessor" writer="orgFlatFileItemWriter" commit-interval="100" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
</beans>