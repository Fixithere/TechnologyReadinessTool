package net.techreadiness.security;

import java.util.HashMap;
import java.util.Map;

public enum CorePermissionCodes implements PermissionCode {

	CORE_CUSTOMER_USER_ACCESS, CORE_CUSTOMER_FILE_LOADING_ACCESS, CORE_CUSTOMER_REGISTRATION_ACCESS, CORE_CUSTOMER_GROUP_ACCESS, CORE_CUSTOMER_ORGANIZATION_ACCESS, CORE_CUSTOMER_ORG_PART_UPDATE, CORE_CUSTOMER_ORG_CONTACT_UPDATE, CORE_CUSTOMER_ORG_DELETE, CORE_CUSTOMER_USER_CREATE, CORE_CUSTOMER_USER_UPDATE, CORE_CUSTOMER_USER_ORG_UPDATE, CORE_CUSTOMER_USER_ENABLE, CORE_CUSTOMER_USER_ROLE_UPDATE, CORE_CUSTOMER_USER_RESET_PASSWORD, CORE_CUSTOMER_ORG_CREATE, CORE_CUSTOMER_ORG_UPDATE, CORE_SEARCH_ALL_ORGS, CORE_SEARCH_IGNORE_ROLECONFER, CORE_CUSTOMER_CHANGE_GLOBAL_SCOPE, CORE_CUSTOMER_FILE_DEVICE, CORE_CUSTOMER_FILE_ORG, CORE_CUSTOMER_FILE_USER, CORE_CUSTOMER_USER_DELETE, CORE_CUSTOMER_USER_PASSWORD_TOKEN_ACCESS, READY_CUSTOMER_DATAENTRY_ACCESS, READY_CUSTOMER_SURVEY_ACCESS, READY_CUSTOMER_FILE_ORG_INFO, READY_CUSTOMER_DEVICE_ANALYZE, READY_CUSTOMER_DEVICE_CREATE, READY_CUSTOMER_DEVICE_DELETE, READY_CUSTOMER_DEVICE_RPT_ACCESS, READY_CUSTOMER_DEVICE_TESTER, READY_CUSTOMER_NETWORK_INFRASTRUCTURE, READY_CUSTOMER_READINESS_ACCESS, READY_CUSTOMER_SCOPE_MIN_SPEC, READY_CUSTOMER_SNAPSHOT, READY_CUSTOMER_SNAPSHOT_CREATE, READY_CUSTOMER_SNAPSHOT_EDIT, READY_CUSTOMER_SNAPSHOT_DELETE, READY_CUSTOMER_DEVICE_UPDATE, READY_CUSTOMER_DEVICE_ASSESSMENT_RPT, READY_CUSTOMER_NETWORK_ASSESSMENT_RPT, READY_CUSTOMER_DEVICE_TO_TEST_RPT, READY_CUSTOMER_ASSESSMENT_COMPLETION_RPT, READY_CUSTOMER_STAFF_PERSONNEL_RPT, READY_CUSTOMER_PROGESS_DEVICE_RPT, READY_CUSTOMER_PROGESS_DEVICE_TEST_TAKER_RPT, READY_CUSTOMER_PROGESS_NETWORK_RPT, READY_CUSTOMER_SCHOOL_EXCEPTION_RPT, READY_CUSTOMER_OVERALL_ASSESSMENT_RPT, CORE_CUSTOMER_CACHE_ACCESS;

	@Override
	public String toString() {
		return super.toString().toLowerCase();
	}

	private static final Map<String, PermissionCode> stringToEnum = new HashMap<>();

	static {
		for (PermissionCode code : values()) {
			stringToEnum.put(code.toString(), code);
		}
	}

	public static PermissionCode fromString(String code) {
		return stringToEnum.get(code);
	}

	@Override
	public String key() {
		return String.valueOf(ordinal());
	}
}
